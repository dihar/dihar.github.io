{"version":3,"sources":["main.js"],"names":["pralaxShadow","boxes","$","not","each","index","val","push","BoxShadow","scroll","centerWindow","window","height","scrollTop","forEach","box","scrolling","sel","that","halfHeight","innerHeight","css","cssShadowValues","parseCssShadow","maxVal","yVal","centerBlock","offset","top","setCssShadowValue","nowVal","string","values","split","color","xVal","parseInt","sVal","bVal","el","shadowObj","TimeObj","date","lostDate","update","Date","getDay","day","getDate","caption","getNumeralFromArr","getHours","hours","getMinutes","minutes","arr","digit","length","strDigit","toString","slice","temp","scrollCard","winTop","blockTop","maxTop","card","opt","position","right","bottom","TimelineScroll","timelineBlock","count","oldCount","diff","counter","find","offsetLeft","width","left","animAr","i","text","addClass","setTimeout","removeClass","parseDate","str","monthArr","regExp","RegExp","dateArr","exec","month","indexOf","year","document","ready","updateDate","timeObj","timeSels","toggleClass","click","e","preventDefault","target","this","data","animate","pralaxObj","whatInCourseBlock","scrollingCard","scrollingCardRight","timelineScroll","smallWindow","on","windowTop","processesBlock","blueIconList","dateDeadline","getFullYear","setInterval"],"mappings":"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","file":"main-min.js","sourcesContent":["$(document).ready(function(){\r\n\t$('[data-scroll]').click(function(e){\r\n\t\te.preventDefault();\r\n\t\tvar target = $(this).data('scroll');\r\n\t\tif($(target).length>0){\r\n\t\t\t$('html, body').animate({scrollTop:$(target).offset().top}, 'slow');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t});\r\n\r\n\tvar pralaxObj = pralaxShadow();\r\n\r\n\tvar whatInCourseBlock = $('#whatInCourse');\r\n\tvar scrollingCard = $('.scrolling-card', whatInCourseBlock);\r\n\tvar scrollingCardRight = ($(window).width() - $('.row', whatInCourseBlock).width())/2 + 40;\r\n\r\n\tvar timelineScroll = TimelineScroll($('#timeline'));\r\n\r\n\tvar smallWindow = $(window).width() < 767;\r\n\r\n\t$(window).on('scroll', function(){\r\n\t\tpralaxObj.scroll();\r\n\r\n\t\tvar windowTop = $(window).scrollTop();\r\n\t\tvar centerWindow = $(window).height() / 2 + windowTop;\r\n\t\tvar processesBlock = $('#processOfEducation');\r\n\r\n\t\ttimelineScroll(windowTop);\r\n\r\n\t\tif(processesBlock.offset().top-processesBlock.height()/2 < centerWindow){\r\n\t\t\t$('.circle-check-icon', processesBlock).each(function(i, el){\r\n\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t$(el).removeClass('icon-fade');\r\n\t\t\t\t},300+(i*300));\r\n\t\t\t});\t\t\r\n\t\t}\r\n\t\tvar blueIconList = $('.flex-icon-list');\r\n\t\tif(blueIconList.offset().top-blueIconList.height()/2 < centerWindow){\r\n\t\t\t$('.blue-icon', blueIconList).each(function(i, el){\r\n\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t$(el).removeClass('icon-fade');\r\n\t\t\t\t},300+(i*300));\r\n\t\t\t});\t\t\r\n\t\t}\r\n\r\n\t\tif(!smallWindow){\r\n\t\t\tscrollCard(windowTop, \r\n\t\t\t\twhatInCourseBlock.offset().top + $('h2', whatInCourseBlock).height()*2,\r\n\t\t\t\t whatInCourseBlock.offset().top + whatInCourseBlock.height() - scrollingCard.height() - $('h2', whatInCourseBlock).height()+30, \r\n\t\t\t\t scrollingCard,{\r\n\t\t\t\t \tright: scrollingCardRight,\r\n\t\t\t\t \tdiff: $('h2', whatInCourseBlock).height()\r\n\t\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\t$(window).on('resize',function(){\r\n\t\tvar windowTop = $(window).scrollTop();\r\n\r\n\t\tsmallWindow = $(window).width() < 767;\r\n\r\n\t\ttimelineScroll = TimelineScroll($('#timeline'));\r\n\t\ttimelineScroll(windowTop);\r\n\r\n\t\tscrollingCardRight = ($(window).width() - $('.row', whatInCourseBlock).width())/2 + 40;\r\n\t\t\r\n\t\tif(!smallWindow){\r\n\t\t\tscrollCard(windowTop, \r\n\t\t\t\twhatInCourseBlock.offset().top + $('h2', whatInCourseBlock).height()*2,\r\n\t\t\t\t whatInCourseBlock.offset().top + whatInCourseBlock.height() - scrollingCard.height() - $('h2', whatInCourseBlock).height()+30, \r\n\t\t\t\t scrollingCard,{\r\n\t\t\t\t \tright: scrollingCardRight,\r\n\t\t\t\t \tdiff: $('h2', whatInCourseBlock).height()\r\n\t\t\t\t});\r\n\t\t}else{\r\n\t\t\tscrollingCard.css({\r\n\t\t\t\tposition: '',\r\n\t\t\t\tright: '',\r\n\t\t\t\tbottom: '',\r\n\t\t\t\ttop: ''\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\r\n\t//таймер времени\r\n\r\n\tvar dateDeadline = parseDate($('#date-deadline').val() || '1 августа 2017');\r\n\tvar timeObj = new TimeObj(\r\n\t\tnew Date(dateDeadline.year || (new Date).getFullYear(),\r\n\t\tdateDeadline.month || 0, \r\n\t\t(dateDeadline.day || 1) + 1, -3));\r\n\tvar timeSels = $('.deadline');\r\n\tupdateDate();\r\n\tfunction updateDate(){\r\n\t\ttimeObj.update();\r\n\t\ttimeSels.each(function(index, el) {\r\n\t\t\t$(el).toggleClass('darken');\r\n\t\t\t$('.digit.days .num', el).text(timeObj.getDay().val);\r\n\t\t\t$('.digit.days .caption', el).text(timeObj.getDay().caption);\r\n\r\n\t\t\t$('.digit.hours .num', el).text(timeObj.getHours().val);\r\n\t\t\t$('.digit.hours .caption', el).text(timeObj.getHours().caption);\r\n\r\n\t\t\t$('.digit.minutes .num', el).text(timeObj.getMinutes().val);\r\n\t\t\t$('.digit.minutes .caption', el).text(timeObj.getMinutes().caption);\r\n\t\t});\r\n\t}\r\n\tsetInterval(function(){\r\n\t\tupdateDate();\r\n\t},1000);\r\n\r\n});\r\n\r\nfunction pralaxShadow(){\r\n\tvar boxes = [];\r\n\t$('.card, .diplom').not('.card-modal').each(function(index, val) {\r\n\t\t boxes.push(new BoxShadow($(val)));\r\n\t});\r\n\treturn{\r\n\t\tscroll: function(){\r\n\t\t\tvar centerWindow = $(window).height() / 2 + $(window).scrollTop();\r\n\t\t\tboxes.forEach(function(box){\r\n\t\t\t\tbox.scrolling(centerWindow);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\nfunction BoxShadow(sel){\r\n\tvar that = {};\r\n\tvar halfHeight = sel.innerHeight()/2;\r\n\tsel.css('transition', 'all 0.2s');\r\n\tvar cssShadowValues = parseCssShadow(sel.css('box-shadow'));\r\n\tvar maxVal = cssShadowValues.yVal;\r\n\tvar centerBlock = halfHeight + sel.offset().top;\r\n\tthat.scrolling = function(centerWindow){\r\n\t\tif(centerWindow < centerBlock - (halfHeight*2)){\r\n\t\t\tsetCssShadowValue(sel, cssShadowValues, maxVal);\r\n\t\t}else if(centerWindow > centerBlock + (halfHeight*2)){\r\n\t\t\tsetCssShadowValue(sel, cssShadowValues, maxVal*-1);\r\n\t\t}else{\r\n\t\t\tvar nowVal = maxVal * (centerBlock - centerWindow) / (halfHeight*2);\r\n\t\t\tsetCssShadowValue(sel, cssShadowValues, nowVal);\r\n\t\t}\r\n\t}\r\n\treturn that;\r\n}\r\nfunction parseCssShadow(string){\r\n\tvar values = string.split(' ');\r\n\treturn{\r\n\t\tcolor: values[0]+' '+values[1]+' '+values[2]+' '+values[3],\r\n\t\txVal: parseInt(values[4]),\r\n\t\tyVal: parseInt(values[5]),\r\n\t\tsVal: parseInt(values[6]),\r\n\t\tbVal: parseInt(values[7])\r\n\t}\r\n}\r\nfunction setCssShadowValue(el, shadowObj, yVal){\r\n\tel.css('box-shadow', shadowObj.color +' '+ shadowObj.xVal \r\n\t\t\t+ 'px '+ yVal + 'px '+ shadowObj.sVal + 'px '\r\n\t\t\t\t+ shadowObj.bVal + 'px ')\r\n}\r\n\r\n\r\n//Принимает объект даты до которого ведется счисление\r\n\r\nfunction TimeObj(date){\r\n\r\n\tvar that = {};\r\n\tvar lostDate;\r\n\r\n\tthat.update = function(){\r\n\t\tlostDate =  new Date(date - new Date());\r\n\t}\r\n\r\n\tthat.update();\r\n\r\n\tthat.getDay = function(){\r\n\t\tvar day = lostDate.getDate() - 1;\r\n\t\treturn {\r\n\t\t\tval: day,\r\n\t\t\tcaption: getNumeralFromArr(['день', 'дня', 'дней'], day)\r\n\t\t};\r\n\t}\r\n\tthat.getHours = function(){\r\n\t\tvar hours = lostDate.getHours();\r\n\t\treturn {\r\n\t\t\tval: hours,\r\n\t\t\tcaption: getNumeralFromArr(['час', 'часа', 'часов'], hours)\r\n\t\t};\r\n\t}\r\n\tthat.getMinutes = function(){\r\n\t\tvar minutes = lostDate.getMinutes();\r\n\t\treturn {\r\n\t\t\tval: minutes,\r\n\t\t\tcaption: getNumeralFromArr(['минута', 'минуты', 'минут'], minutes)\r\n\t\t};\r\n\r\n\t}\r\n\treturn that;\r\n}\r\n\r\n// Старый плагин вывода дат, обновляется каждую неделю автоматически\r\n//принимает номер дня недели обновления\r\n\r\n// function TimeObj(nextDay){\r\n// \tif(nextDay<0 || nextDay>6){\r\n// \t\treturn false\r\n// \t};\r\n\r\n// \tvar that = {};\r\n// \tvar now;\r\n// \tvar dayNum;\r\n// \tvar diffDay;\r\n\r\n// \tthat.update = function(){\r\n// \t\tnow = new Date();\r\n// \t\tdayNum = now.getDay();\r\n// \t\tdiffDay = nextDay+7 - dayNum;\r\n// \t\tif(diffDay>7){\r\n// \t\t\tdiffDay-=7;\r\n// \t\t}\r\n// \t\t(diffDay === 7) && (diffDay = 0);\r\n// \t}\r\n\r\n// \tthat.update();\r\n\r\n// \tthat.getDay = function(){\r\n// \t\treturn {\r\n// \t\t\tval: diffDay,\r\n// \t\t\tcaption: getNumeralFromArr(['день', 'дня', 'дней'], diffDay)\r\n// \t\t};\r\n// \t}\r\n// \tthat.getHours = function(){\r\n// \t\tvar hours = 23 - now.getHours();\r\n// \t\treturn {\r\n// \t\t\tval: hours,\r\n// \t\t\tcaption: getNumeralFromArr(['час', 'часа', 'часов'], hours)\r\n// \t\t};\r\n// \t}\r\n// \tthat.getMinutes = function(){\r\n// \t\tvar minutes = 59 - now.getMinutes();\r\n// \t\treturn {\r\n// \t\t\tval: minutes,\r\n// \t\t\tcaption: getNumeralFromArr(['минута', 'минуты', 'минут'], minutes)\r\n// \t\t};\r\n\r\n// \t}\r\n// \treturn that;\r\n// }\r\n\r\n\r\nfunction getNumeralFromArr(arr, digit){\r\n\tif(arr.length<3){\r\n\t\treturn false;\r\n\t}\r\n\tstrDigit = digit.toString();\r\n\tif(strDigit.length>1 && \r\n\t\t\tstrDigit.slice(strDigit.length-2, strDigit.length-1) === \"1\"){\r\n\t\treturn arr[2];\r\n\t}\r\n\tvar temp = strDigit.slice(strDigit.length-1, strDigit.length);\r\n\tif(strDigit.length>0 && temp === \"1\"){\r\n\t\treturn arr[0];\r\n\t}\r\n\ttemp = parseInt(temp);\r\n\tif(strDigit.length>0 && temp > 1 && temp < 5){\r\n\t\treturn arr[1];\r\n\t}\r\n\treturn arr[2];\r\n}\r\n\r\nfunction scrollCard(winTop, blockTop, maxTop, card, opt){\r\n\tif(winTop < blockTop){\r\n\t\tcard.css({\r\n\t\t\tposition: 'absolute',\r\n\t\t\tright: 40,\r\n\t\t\ttop: 20,\r\n\t\t\tbottom: 'auto'\r\n\t\t});\r\n\t}else if(winTop >= blockTop && winTop <=maxTop){\r\n\t\tcard.css({\r\n\t\t\tright: opt.right,\r\n\t\t\tposition: 'fixed',\r\n\t\t\ttop: 20,\r\n\t\t\tbottom: 'auto'\r\n\t\t});\r\n\t}else if(winTop > maxTop){\r\n\t\tcard.css({\r\n\t\t\tposition: 'absolute',\r\n\t\t\tright: 40,\r\n\t\t\tbottom: 5,\r\n\t\t\ttop: 'auto'\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction TimelineScroll(timelineBlock){\r\n\tvar count = 0;\r\n\tvar oldCount = 0;\r\n\tvar diff = 120;\r\n\tvar counter = timelineBlock.find('.counter');\r\n\tvar offsetLeft = $(window).width()<800 ? 10 : 18;\r\n\tcounter.css('left', timelineBlock.offset().left - offsetLeft);\r\n\r\n\tvar animAr = [];\r\n\r\n\ttimelineBlock.find('.items .item').each(function(i, el){\r\n\t\tanimAr.push(0);\r\n\t});\r\n\r\n\treturn function(winTop){\r\n\t\tcount = 0;\r\n\t\ttimelineBlock.find('.items .item').each(function(i, el){\r\n\t\t\tif(winTop - $(el).offset().top + 40 > 0){\r\n\t\t\t\tcount += parseInt($(el).find('.digit').text());\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t$('.digit',counter).text(count);\r\n\t\t$('.caption',counter).text(getNumeralFromArr(['Час', 'Часа', 'Часов'], count));\r\n\t\t\r\n\t\tif(oldCount !== count){\r\n\t\t\tcounter.addClass('active')\r\n\t\t\toldCount = count;\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tcounter.removeClass('active');\r\n\t\t\t}, 200)\r\n\t\t}\r\n\r\n\t\tif(winTop < timelineBlock.offset().top - diff ||\r\n\t\t\twinTop > timelineBlock.offset().top + timelineBlock.height()){\r\n\t\t\tcounter.css('opacity', 0);\r\n\t\t}else{\r\n\t\t\tcounter.css('opacity', 1);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction parseDate(str){\r\n\tvar monthArr = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'];\r\n\tvar regExp = new RegExp(/^\\s?(\\d{1,2})\\s([А-ЯЁа-яё]+)\\s?(\\d{4})?/,'i');\r\n\tvar dateArr = regExp.exec(str);\r\n\tvar day = parseInt(dateArr[1]) || 1;\r\n\tvar month = monthArr.indexOf(dateArr[2]);\r\n\tif(month < 0){\r\n\t\tmonth = 0;\r\n\t}\r\n\tvar year = parseInt(dateArr[3]);\r\n\r\n\treturn {\r\n\t\tday: day,\r\n\t\tmonth: month,\r\n\t\tyear: year\r\n\t}\r\n}\r\n"],"sourceRoot":"/source/"}